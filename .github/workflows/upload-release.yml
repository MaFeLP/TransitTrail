name: 'Publish Release Assets'

on:
  release:
    types: [created]

jobs:
  # Build and upload release artifacts
  build-tauri:
    name: "Build the application for different architectures"
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: true

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - uses: tauri-apps/tauri-action@v0
        id: tauri

      # Hacky workaround to upload files from given bundles in tauri
      - name: "Format artifact paths"
        shell: python
        run: |
          paths = ${{ steps.tauri.outputs.artifactPaths }}
          with open("paths.txt", 'w') as f:
            f.write('"' + '" "'.join(paths) + '"')

      - name: "Upload release artifacts"
        if: matrix.platform != 'windows-latest'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          find src-tauri/target/release/bundle/
          gh release upload "${{ github.event.release.tag_name }}" $(find src-tauri/target/release/bundle/ -name '*.dmg' -or -name '*.app' -or -name '*.AppImage' -or -name '*.deb')

      - name: "Upload release artifacts (windows)"
        if: matrix.platform == 'windows-latest'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          Get-ChildItem src-tauri\\target\\release\\bundle -Recurse
          gh release upload "${{ github.event.release.tag_name }}" (Get-ChildItem src-tauri\\target\\release\\bundle -Filter '*.msi' -Recurse).FullName
          gh release upload "${{ github.event.release.tag_name }}" (Get-ChildItem src-tauri\\target\\release\\bundle -Filter '*.exe' -Recurse).FullName

  # Build and upload the documentation artifacts
  build-documentation:
    name: "Build the documentation PDFs"
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: "Setup typst"
        run: |
          wget "https://github.com/typst/typst/releases/download/$(gh api 'https://api.github.com/repos/typst/typst/releases/latest' | jq -r '.tag_name')/typst-x86_64-unknown-linux-musl.tar.xz"
          tar xf typst-x86_64-unknown-linux-musl.tar.xz
          mv typst-x86_64-unknown-linux-musl/typst /tmp/typst
          rm -r typst-x86_64-unknown-linux-musl*
        env:
          GH_TOKEN: ${{ github.token }}
      
      - name: "Build Introduction"
        working-directory: "docs"
        run: |
          /tmp/typst compile introduction.typ

      - name: "Build Conclusion"
        working-directory: "docs"
        run: |
          /tmp/typst compile conclusion.typ

      - name: "Upload documentation artifacts"
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release upload "${{ github.event.release.tag_name }}" LICENSE.md docs/conclusion.pdf docs/introduction.pdf
